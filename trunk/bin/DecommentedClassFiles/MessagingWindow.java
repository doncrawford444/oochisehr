/** Copyright 2014 Donald Ray Crawford* * This file is part of Oochis EHR.* * Oochis EHR is free software: you can redistribute it and/or modify* it under the terms of the GNU General Public License as published by* the Free Software Foundation, either version 3 of the License, or* (at your option) any later version.* * This program is distributed in the hope that it will be useful,* but WITHOUT ANY WARRANTY; without even the implied warranty of* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the* GNU General Public License for more details.* * You should have received a copy of the GNU General Public License* along with Oochis EHR.  If not, see <http://www.gnu.org/licenses/>.*/package oochisCore;import java.awt.CardLayout;import java.awt.Color;import java.awt.Dimension;import java.awt.Font;import java.awt.GridBagConstraints;import java.awt.GridBagLayout;import java.awt.Insets;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.io.File;import java.util.Date;import java.util.Vector;import javax.swing.JButton;import javax.swing.JLabel;import javax.swing.JPanel;import javax.swing.JScrollPane;import javax.swing.JTextArea;import javax.swing.JTextField;import javax.swing.ScrollPaneConstants;import javax.swing.SwingConstants;import javax.swing.border.BevelBorder;import javax.swing.border.CompoundBorder;import javax.swing.border.LineBorder;public class MessagingWindow extends Window implements ActionListener {Dimension messagingFrameLocation = new Dimension(30, 30);String title2;String firstName;String middleName;String lastName;String suffix;Dimension messagingSizeDimension = new Dimension(1440, 780);Dimension messagingCommandsPanelDimension = new Dimension(400, 280);Dimension messagingAddressPanelDimension = new Dimension(400, 280);Dimension messagingContactsPanelDimension = new Dimension(400, 280);JPanel messagingCommandJPanel = new JPanel(new GridBagLayout());JPanel messagingCommandsPanelBaseJPanel = new JPanel(new GridBagLayout());CardLayout commandPanelCardLayout = new CardLayout();JPanel commandPanelCardedJPanel = new JPanel(commandPanelCardLayout);static JButton checkAccountsJButton = new JButton(" Check email ");static JButton addAccountJButton = new JButton(" Add ");JPanel newAccountScrollPaneJPanel = new JPanel(new GridBagLayout());JScrollPane newAccountJScrollPane = new JScrollPane(newAccountScrollPaneJPanel);static JButton editAccountsJButton = new JButton(" Delete ");JLabel accountsScrollPaneBasePanelHeaderJLabel = new JLabel("Email and text message accounts");JPanel accountsScrollPaneBaseJPanel = new JPanel(new GridBagLayout());JPanel accountsScrollPaneJPanel = new JPanel(new GridBagLayout());JScrollPane accountsJScrollPane = new JScrollPane(accountsScrollPaneJPanel);CardLayout accountsScrollPaneBasePanelCardLayout = new CardLayout();JPanel commandPanelButtonsJPanel = new JPanel(new GridBagLayout());static JLabel commandPanelButtonsPanelHeaderJLabel = new JLabel("Email and instant message accounts");JPanel contactsAndMemosPanelButtonsJPanel = new JPanel(new GridBagLayout());static JButton allContactsJButton = new JButton("All");static JButton healthProviderJButton = new JButton("Health providers");static JButton patientContactsJButton = new JButton("Patients");static JButton newContactJButton = new JButton("New");static JPanel editContactsButtonJPanel = new JPanel(new GridBagLayout());static JButton editOkJButton = new JButton(" Ok ");static JButton editDeleteJButton = new JButton(" Delete ");JPanel contactsAndMemosJPanel = new JPanel(new GridBagLayout());CardLayout memosCardedPanelCardLayout = new CardLayout();JPanel memosCardedJPanel = new JPanel(memosCardedPanelCardLayout);JPanel memosBaseJPanel = new JPanel(new GridBagLayout());JPanel memosPanelButtonsJPanel = new JPanel(new GridBagLayout());Color alertsAndMessagesBorderColor = Color.GREEN;static JButton memosReceivedJButton = new JButton(" Received ");static JButton memosSentJButton = new JButton(" Sent ");Vector<String[]> memosReceived = new Vector<String[]>();Vector<String[]> memosSent = new Vector<String[]>();JPanel editContactsJPanel = new JPanel(new GridBagLayout());JPanel messagingContactsJPanel = new JPanel(new GridBagLayout());static JLabel messagingEditContactsLabel1Title = new JLabel("Title: ");static JLabel messagingEditContactsLabel2LastName = new JLabel("First name: ");static JLabel messagingEditContactsLabel3FirstName = new JLabel("Middle name: ");static JLabel messagingEditContactsLabel4MiddleName = new JLabel("Last name: ");static JLabel messagingEditContactsLabel5Suffix = new JLabel("Suffix: ");static JLabel messagingEditContactsLabel6EmailA = new JLabel("Email: ");static JLabel messagingEditContactsLabel7WorkPhoneA = new JLabel("Work phone: ");static JLabel messagingEditContactsLabelPersonNameDegreeHL7Element00801 = new JLabel("      Degree: ");static JLabel messagingEditContactsLabel9PersonalPhone = new JLabel("Personal phone: ");static JLabel messagingEditContactsLabel10PhoneADescription = new JLabel("descriptionP1: ");static JLabel messagingEditContactsLabel11PhoneC = new JLabel("Phone 3: ");static JLabel messagingEditContactsLabel12PhoneCDescription = new JLabel("descriptionP3: ");static JLabel messagingEditContactsLabel13PhoneD = new JLabel("Phone 4: ");static JLabel messagingEditContactsLabel14PhoneDDescription = new JLabel("descriptionP4: ");static JLabel messagingEditContactsLabel15EmailADescription = new JLabel("descriptionE1: ");static JLabel messagingEditContactsLabel16EmailB = new JLabel("Email 2: ");static JLabel messagingEditContactsLabel17EmailBDescription = new JLabel("descriptionE2: ");static JLabel messagingEditContactsLabel18Blah = new JLabel("Blah:");static JTextField messagingEditContactsField1Title = new JTextField("Title", 1);static JTextField messagingEditContactsField2LastName = new JTextField("FirstName", 6);static JTextField messagingEditContactsField3FirstName = new JTextField("M.I.", 6);static JTextField messagingEditContactsField4MiddleName = new JTextField(6);static JTextField messagingEditContactsField5Suffix = new JTextField(6);static JTextField messagingEditContactsField6EmailA = new JTextField(6);static JTextField messagingEditContactsField7WorkPhoneA = new JTextField(6);static JTextField messagingEditContactsFieldPersonNameDegreeHL7Element00801 = new JTextField(6);static JTextField messagingEditContactsField9PersonalPhone = new JTextField(6);static JTextField messagingEditContactsField10PhoneADescription = new JTextField(6);static JTextField messagingEditContactsField11PhoneC = new JTextField(6);static JTextField messagingEditContactsField12PhoneCDescription = new JTextField(6);static JTextField messagingEditContactsField13PhoneD = new JTextField(6);static JTextField messagingEditContactsField14PhoneDDescription = new JTextField(6);static JTextField messagingEditContactsField15EmailADescription = new JTextField(6);static JTextField messagingEditContactsField16EmailB = new JTextField(6);static JTextField messagingEditContactsField17EmailBDescription = new JTextField(6);static JTextField messagingEditContactsField18Blah = new JTextField(6);JButton newMessagingEditContactsJButton = new JButton("Newt");JButton messagingEditContactsButton2Edit = new JButton("Edit");JButton messagingEditContactsButton3Delete = new JButton("Delete");JPanel messagingAccountsJPanel = new JPanel(new GridBagLayout());static JLabel newEmailAccountJLabel = new JLabel("Email address:");JTextField newEmailAccountJTextField = new JTextField("example@gmail.com");static JLabel newInstantMessageAccountJLabel = new JLabel("Instant message #:");JTextField newInstantMessageAccountJTextField = new JTextField("503 123 4567");static JButton newAccountOkJButton = new JButton(" Ok ");static JButton newMessageJButton = new JButton(" New ");static JButton addressPanelSentJButton = new JButton(" << Sent ");static JButton addressPanelSendJButton = new JButton(" Send ");static JButton addressPanelAttachJButton = new JButton(" Attachments ");static public JPanel addressPanelButtonJPanel = new JPanel(new GridBagLayout());public JPanel messagingAddressJPanel = new JPanel(new GridBagLayout());public JPanel messagingAddressPanelBaseJPanel = new JPanel(new GridBagLayout());static public JLabel addressPanelToLabel = new JLabel("To: ");static public JLabel addressPanelCcLabel = new JLabel("Cc: ");static public JLabel addressPanelFromLabel = new JLabel("From: ");static public JLabel addressPanelSubjectLabel = new JLabel("Subject: ");public JTextField addressPanelToTextField = new JTextField(18);public JTextField addressPanelCcTextField = new JTextField(18);public JTextField addressPanelFromTextField = new JTextField("anyone@anywhere.com", 18);public JTextField addressPanelSubjectTextField = new JTextField("subject is laugh it up, fuzzball", 18);public static String string = " ";public static String inBoxHTML = "" + "<html>" + "      <BGCOLOR = rgb(255,255,255)>" + "      <font color = rgb(0, 0, 255)>" + string + "Dr. Freewillie........................................" + "</font>" + "</html>";public static JLabel inBoxMessagesLabel = new JLabel();public static JPanel inBoxScrollPaneJPanel = new JPanel(new GridBagLayout());public static JScrollPane inBoxJScrollPane = new JScrollPane(inBoxScrollPaneJPanel);public static String messageOrAttachmentObjectType;public static JPanel messagingViewPanel = new JPanel(new GridBagLayout());public static JLabel messagingViewPanelDefaultLabel = new JLabel("View messages and attachments here");public static JScrollPane messagingViewPanelScrollPane;public static String outBoxHTML = "<html><BGCOLOR = rgb(255,255,255)><font color = rgb(128, 128, 255)>Dr. Freewillie.................................................</font></html>";public static JLabel outBoxLabel = new JLabel(outBoxHTML);public static JPanel outBoxSentMessagesLabelPanel = new JPanel(new GridBagLayout());public static CardLayout outBoxContentPanelCardLayout = new CardLayout();public static JPanel outBoxContentPanel = new JPanel(outBoxContentPanelCardLayout);public static JTextArea outBoxTextArea = new JTextArea();public static JScrollPane outBoxJScrollPane = new JScrollPane(outBoxContentPanel);JPanel leftBaseJPanel = new JPanel(new GridBagLayout());JPanel centerJPanel = new JPanel(new GridBagLayout());JPanel rightBaseJPanel = new JPanel(new GridBagLayout());GridBagConstraints newAccountScrollPanePanelConstraints = new GridBagConstraints();GridBagConstraints accountsScrollPaneBasePanelConstraints = new GridBagConstraints();GridBagConstraints accountsScrollPanePanelConstraints = new GridBagConstraints();GridBagConstraints contentPanelConstraints = new GridBagConstraints();GridBagConstraints editContactsPanelConstraints = new GridBagConstraints();GridBagConstraints contactsAndMemosPanelConstraints = new GridBagConstraints();GridBagConstraints messagingAddressPanelConstraints = new GridBagConstraints();GridBagConstraints messagingAddressPanelBasePanelConstraints = new GridBagConstraints();GridBagConstraints messagingViewPanelConstraints = new GridBagConstraints();GridBagConstraints messagingEditContactsButtonConstraints = new GridBagConstraints();GridBagConstraints contactsAndMemosPanelButtonsPanelConstraints = new GridBagConstraints();GridBagConstraints commandPanelButtonsConstraints = new GridBagConstraints();GridBagConstraints messagingAccountsPanelConstraints = new GridBagConstraints();GridBagConstraints leftBasePanelConstraints = new GridBagConstraints();GridBagConstraints centerPanelConstraints = new GridBagConstraints();GridBagConstraints rightPanelConstraints = new GridBagConstraints();GridBagConstraints messagingContactsPanelConstraints = new GridBagConstraints();GridBagConstraints memosPanelButtonsPanelConstraints = new GridBagConstraints();GridBagConstraints memosBasePanelConstraints = new GridBagConstraints();GridBagConstraints messagingCommandPanelConstraints = new GridBagConstraints();GridBagConstraints messagingCommandPanelBasePanelConstraints = new GridBagConstraints();GridBagConstraints addressPanelButtonPanelConstraints = new GridBagConstraints();Color mainPanelColor = new Color(209, 200, 177);MessagingWindow() {titleBarJLabel.setText("Messaging  -  Oochis EHR");addTalkbackText("Messaging  -  Oochis EHR", null, false);setLocation(messagingFrameLocation.width, messagingFrameLocation.height);commandPanelCardedJPanel.setBackground(mainPanelColor);messagingAccountsJPanel.setOpaque(false);messagingAccountsJPanel.add(newEmailAccountJLabel, messagingAccountsPanelConstraints);messagingAccountsPanelConstraints.gridx = 1;messagingAccountsPanelConstraints.weightx = 1;messagingAccountsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;messagingAccountsJPanel.add(newEmailAccountJTextField, messagingAccountsPanelConstraints);messagingAccountsPanelConstraints.gridy = 2;messagingAccountsPanelConstraints.gridx = 0;messagingAccountsPanelConstraints.weightx = 0;messagingAccountsPanelConstraints.fill = GridBagConstraints.NONE;messagingAccountsJPanel.add(newInstantMessageAccountJLabel, messagingAccountsPanelConstraints);messagingAccountsPanelConstraints.gridx = 1;messagingAccountsPanelConstraints.weightx = 1;messagingAccountsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;messagingAccountsJPanel.add(newInstantMessageAccountJTextField, messagingAccountsPanelConstraints);messagingAccountsPanelConstraints.gridx = 2;messagingAccountsPanelConstraints.gridheight = 2;messagingAccountsPanelConstraints.weightx = 0;messagingAccountsPanelConstraints.fill = GridBagConstraints.VERTICAL;messagingAccountsJPanel.add(newAccountOkJButton, messagingAccountsPanelConstraints);newAccountOkJButton.addActionListener(this);newAccountOkJButton.setActionCommand("newAccountOkJButton");newAccountOkJButton.setHorizontalTextPosition(SwingConstants.CENTER);newAccountOkJButton.setVerticalTextPosition(SwingConstants.CENTER);newAccountOkJButton.setFont(new Font("arial", Font.BOLD, 15));newAccountOkJButton.setRolloverEnabled(false);newAccountOkJButton.setFocusPainted(false);checkAccountsJButton.addActionListener(this);checkAccountsJButton.setActionCommand("checkAccountsJButton");checkAccountsJButton.setHorizontalTextPosition(SwingConstants.CENTER);checkAccountsJButton.setVerticalTextPosition(SwingConstants.CENTER);checkAccountsJButton.setFont(new Font("arial", Font.BOLD, 15));checkAccountsJButton.setRolloverEnabled(false);checkAccountsJButton.setFocusPainted(false);addAccountJButton.addActionListener(this);addAccountJButton.setActionCommand("addAccountJButton");addAccountJButton.setHorizontalTextPosition(SwingConstants.CENTER);addAccountJButton.setVerticalTextPosition(SwingConstants.CENTER);addAccountJButton.setFont(new Font("arial", Font.BOLD, 15));addAccountJButton.setRolloverEnabled(false);addAccountJButton.setFocusPainted(false);editAccountsJButton.addActionListener(this);editAccountsJButton.setActionCommand("editAccountsJButton");editAccountsJButton.setHorizontalTextPosition(SwingConstants.CENTER);editAccountsJButton.setVerticalTextPosition(SwingConstants.CENTER);editAccountsJButton.setFont(new Font("arial", Font.BOLD, 15));editAccountsJButton.setRolloverEnabled(false);editAccountsJButton.setFocusPainted(false);accountsScrollPaneJPanel.setOpaque(false);accountsScrollPaneJPanel.add(accountsScrollPaneBasePanelHeaderJLabel, accountsScrollPanePanelConstraints);accountsScrollPaneBaseJPanel.add(accountsJScrollPane, accountsScrollPaneBasePanelConstraints);commandPanelButtonsJPanel.setOpaque(false);commandPanelButtonsJPanel.setBorder(new BevelBorder(BevelBorder.RAISED));commandPanelButtonsConstraints.insets = new Insets(6, 6, 6, 6);commandPanelButtonsConstraints.weightx = 1;commandPanelButtonsConstraints.fill = GridBagConstraints.BOTH;commandPanelButtonsJPanel.add(checkAccountsJButton, commandPanelButtonsConstraints);commandPanelButtonsConstraints.gridx = 1;commandPanelButtonsConstraints.insets = new Insets(6, 0, 6, 6);commandPanelButtonsJPanel.add(addAccountJButton, commandPanelButtonsConstraints);commandPanelButtonsConstraints.gridx = 2;commandPanelButtonsJPanel.add(editAccountsJButton, commandPanelButtonsConstraints);commandPanelButtonsConstraints.gridy = 1;commandPanelButtonsConstraints.gridx = 0;commandPanelButtonsConstraints.gridwidth = 3;commandPanelButtonsJPanel.add(accountsScrollPaneBaseJPanel, commandPanelButtonsConstraints);commandPanelCardedJPanel.add(messagingAccountsJPanel, "messagingAccountsJPanel");contactsAndMemosPanelButtonsJPanel.setOpaque(false);contactsAndMemosPanelButtonsJPanel.setBorder(new BevelBorder(BevelBorder.RAISED));contactsAndMemosPanelButtonsPanelConstraints.insets = new Insets(6, 6, 6, 6);contactsAndMemosPanelButtonsPanelConstraints.weightx = 1;contactsAndMemosPanelButtonsPanelConstraints.fill = GridBagConstraints.BOTH;contactsAndMemosPanelButtonsJPanel.add(allContactsJButton, contactsAndMemosPanelButtonsPanelConstraints);contactsAndMemosPanelButtonsPanelConstraints.insets = new Insets(6, 0, 6, 6);contactsAndMemosPanelButtonsPanelConstraints.gridx = 1;contactsAndMemosPanelButtonsJPanel.add(patientContactsJButton, contactsAndMemosPanelButtonsPanelConstraints);contactsAndMemosPanelButtonsPanelConstraints.gridx = 2;contactsAndMemosPanelButtonsJPanel.add(healthProviderJButton, contactsAndMemosPanelButtonsPanelConstraints);contactsAndMemosPanelButtonsPanelConstraints.gridx = 3;contactsAndMemosPanelButtonsJPanel.add(newContactJButton, contactsAndMemosPanelButtonsPanelConstraints);contactsAndMemosJPanel.setOpaque(false);messagingContactsJPanel.setBorder(new BevelBorder(BevelBorder.RAISED));messagingContactsJPanel.setBackground(mainPanelColor);patientContactsJButton.addActionListener(this);patientContactsJButton.setActionCommand("patientContactsJButton");patientContactsJButton.setHorizontalTextPosition(SwingConstants.CENTER);patientContactsJButton.setVerticalTextPosition(SwingConstants.CENTER);patientContactsJButton.setFont(new Font("arial", Font.BOLD, 15));patientContactsJButton.setRolloverEnabled(false);patientContactsJButton.setFocusPainted(false);newContactJButton.addActionListener(this);newContactJButton.setActionCommand("newContactJButton");newContactJButton.setHorizontalTextPosition(SwingConstants.CENTER);newContactJButton.setVerticalTextPosition(SwingConstants.CENTER);newContactJButton.setFont(new Font("arial", Font.BOLD, 15));newContactJButton.setRolloverEnabled(false);newContactJButton.setFocusPainted(false);healthProviderJButton.addActionListener(this);healthProviderJButton.setActionCommand("healthProviderJButton");healthProviderJButton.setHorizontalTextPosition(SwingConstants.CENTER);healthProviderJButton.setVerticalTextPosition(SwingConstants.CENTER);healthProviderJButton.setFont(new Font("arial", Font.BOLD, 15));healthProviderJButton.setRolloverEnabled(false);healthProviderJButton.setFocusPainted(false);allContactsJButton.addActionListener(this);allContactsJButton.setActionCommand("allContactsJButton");allContactsJButton.setHorizontalTextPosition(SwingConstants.CENTER);allContactsJButton.setVerticalTextPosition(SwingConstants.CENTER);allContactsJButton.setFont(new Font("arial", Font.BOLD, 15));allContactsJButton.setRolloverEnabled(false);allContactsJButton.setFocusPainted(false);editOkJButton.addActionListener(this);editOkJButton.setActionCommand("editOkJButton");editOkJButton.setHorizontalTextPosition(SwingConstants.CENTER);editOkJButton.setVerticalTextPosition(SwingConstants.CENTER);editOkJButton.setFont(new Font("arial", Font.BOLD, 15));editOkJButton.setRolloverEnabled(false);editOkJButton.setFocusPainted(false);editDeleteJButton.addActionListener(this);editDeleteJButton.setActionCommand("editDeleteJButton");editDeleteJButton.setHorizontalTextPosition(SwingConstants.CENTER);editDeleteJButton.setVerticalTextPosition(SwingConstants.CENTER);editDeleteJButton.setFont(new Font("arial", Font.BOLD, 15));editDeleteJButton.setRolloverEnabled(false);editDeleteJButton.setFocusPainted(false);editContactsButtonJPanel.setOpaque(false);editContactsButtonJPanel.add(editOkJButton, messagingEditContactsButtonConstraints);messagingEditContactsButtonConstraints.gridx = 1;editContactsButtonJPanel.add(editDeleteJButton, messagingEditContactsButtonConstraints);memosReceivedJButton.addActionListener(this);memosReceivedJButton.setActionCommand("memosReceivedJButton");memosReceivedJButton.setHorizontalTextPosition(SwingConstants.CENTER);memosReceivedJButton.setVerticalTextPosition(SwingConstants.CENTER);memosReceivedJButton.setFont(new Font("arial", Font.BOLD, 15));memosReceivedJButton.setRolloverEnabled(false);memosReceivedJButton.setFocusPainted(false);memosSentJButton.addActionListener(this);memosSentJButton.setActionCommand("memosSentJButton");memosSentJButton.setHorizontalTextPosition(SwingConstants.CENTER);memosSentJButton.setVerticalTextPosition(SwingConstants.CENTER);memosSentJButton.setFont(new Font("arial", Font.BOLD, 15));memosSentJButton.setRolloverEnabled(false);memosSentJButton.setFocusPainted(false);newMessageJButton.addActionListener(this);newMessageJButton.setActionCommand("newMessageJButton");newMessageJButton.setHorizontalTextPosition(SwingConstants.CENTER);newMessageJButton.setVerticalTextPosition(SwingConstants.CENTER);newMessageJButton.setFont(new Font("arial", Font.BOLD, 15));newMessageJButton.setRolloverEnabled(false);newMessageJButton.setFocusPainted(false);addressPanelSentJButton.addActionListener(this);addressPanelSentJButton.setActionCommand("addressPanelSentJButton");addressPanelSentJButton.setHorizontalTextPosition(SwingConstants.CENTER);addressPanelSentJButton.setVerticalTextPosition(SwingConstants.CENTER);addressPanelSentJButton.setFont(new Font("arial", Font.BOLD, 15));addressPanelSentJButton.setRolloverEnabled(false);addressPanelSentJButton.setFocusPainted(false);addressPanelSendJButton.addActionListener(this);addressPanelSendJButton.setActionCommand("addressPanelSendJButton");addressPanelSendJButton.setHorizontalTextPosition(SwingConstants.CENTER);addressPanelSendJButton.setVerticalTextPosition(SwingConstants.CENTER);addressPanelSendJButton.setFont(new Font("arial", Font.BOLD, 15));addressPanelSendJButton.setRolloverEnabled(false);addressPanelSendJButton.setFocusPainted(false);addressPanelAttachJButton.addActionListener(this);addressPanelAttachJButton.setActionCommand("addressPanelAttachJButton");addressPanelAttachJButton.setHorizontalTextPosition(SwingConstants.CENTER);addressPanelAttachJButton.setVerticalTextPosition(SwingConstants.CENTER);addressPanelAttachJButton.setFont(new Font("arial", Font.BOLD, 15));addressPanelAttachJButton.setRolloverEnabled(false);addressPanelAttachJButton.setFocusPainted(false);memosPanelButtonsJPanel.setBackground(SystemWindow.lightQuintessentialThemeColor);memosPanelButtonsPanelConstraints.insets = new Insets(4, 2, 4, 2);memosPanelButtonsJPanel.add(memosSentJButton, memosPanelButtonsPanelConstraints);memosPanelButtonsPanelConstraints.gridx = 1;memosPanelButtonsJPanel.add(memosReceivedJButton, memosPanelButtonsPanelConstraints);fillMemosJPanel();memosCardedJPanel.setBackground(Color.WHITE);memosCardedJPanel.setBorder(new BevelBorder(BevelBorder.LOWERED));memosCardedPanelCardLayout.show(memosCardedJPanel, "receivedMemosJPanel");memosBaseJPanel.setOpaque(false);memosBaseJPanel.setBorder(new CompoundBorder(new CompoundBorder(new BevelBorder(BevelBorder.RAISED), new LineBorder(alertsAndMessagesBorderColor, 5)), new BevelBorder(BevelBorder.LOWERED)));memosBasePanelConstraints.weightx = 1;memosBasePanelConstraints.fill = GridBagConstraints.BOTH;memosBaseJPanel.add(memosPanelButtonsJPanel, memosBasePanelConstraints);memosBasePanelConstraints.gridy = 1;memosBaseJPanel.add(memosCardedJPanel, memosBasePanelConstraints);contactsAndMemosPanelConstraints.weightx = 1;contactsAndMemosPanelConstraints.fill = GridBagConstraints.HORIZONTAL;contactsAndMemosPanelConstraints.insets = new Insets(6, 6, 6, 6);contactsAndMemosJPanel.add(memosBaseJPanel, contactsAndMemosPanelConstraints);contactsAndMemosPanelConstraints.gridy = 2;contactsAndMemosJPanel.add(contactsAndMemosPanelButtonsJPanel, contactsAndMemosPanelConstraints);contactsAndMemosPanelConstraints.gridy = 1;editContactsPanelConstraints.gridy = 0;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel1Title, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 0;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField1Title, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 0;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel2LastName, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 0;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField2LastName, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 1;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel3FirstName, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 1;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField3FirstName, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 1;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel4MiddleName, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 1;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField4MiddleName, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 2;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel7WorkPhoneA, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 2;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField7WorkPhoneA, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 2;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel6EmailA, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 2;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField6EmailA, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 3;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel9PersonalPhone, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 3;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField9PersonalPhone, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 3;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabelPersonNameDegreeHL7Element00801, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 3;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsFieldPersonNameDegreeHL7Element00801, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 4;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel10PhoneADescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 4;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField10PhoneADescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 4;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel5Suffix, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 4;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField5Suffix, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 5;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel11PhoneC, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 5;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField11PhoneC, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 5;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel12PhoneCDescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 5;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField12PhoneCDescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 6;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel13PhoneD, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 6;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField13PhoneD, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 6;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel14PhoneDDescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 6;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField14PhoneDDescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 7;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel15EmailADescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 7;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField15EmailADescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 7;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel16EmailB, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 7;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField16EmailB, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 8;editContactsPanelConstraints.gridx = 2;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel17EmailBDescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 8;editContactsPanelConstraints.gridx = 3;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsPanelConstraints.weightx = 1;editContactsJPanel.add(messagingEditContactsField17EmailBDescription, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 8;editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.anchor = GridBagConstraints.EAST;editContactsPanelConstraints.weightx = 0;editContactsPanelConstraints.fill = GridBagConstraints.NONE;editContactsJPanel.add(messagingEditContactsLabel18Blah, editContactsPanelConstraints);editContactsPanelConstraints.gridy = 8;editContactsPanelConstraints.gridx = 1;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsPanelConstraints.weightx = 1;editContactsPanelConstraints.fill = GridBagConstraints.HORIZONTAL;editContactsJPanel.add(messagingEditContactsField18Blah, editContactsPanelConstraints);editContactsPanelConstraints.gridx = 0;editContactsPanelConstraints.gridy = 30;editContactsPanelConstraints.gridwidth = 4;editContactsPanelConstraints.anchor = GridBagConstraints.CENTER;editContactsJPanel.add(editContactsButtonJPanel, editContactsPanelConstraints);editContactsPanelConstraints.gridwidth = 1;editContactsJPanel.setBackground(mainPanelColor);messagingContactsPanelConstraints.weightx = 1;messagingContactsPanelConstraints.fill = GridBagConstraints.BOTH;messagingContactsJPanel.add(contactsAndMemosJPanel, messagingContactsPanelConstraints);messagingAddressJPanel.setBorder(new LineBorder(new Color(100, 100, 100), 2));messagingAddressJPanel.setOpaque(false);messagingAddressPanelConstraints.fill = GridBagConstraints.HORIZONTAL;messagingAddressPanelConstraints.insets = new Insets(6, 6, 0, 6);messagingAddressPanelConstraints.anchor = GridBagConstraints.EAST;messagingAddressJPanel.add(addressPanelToLabel, messagingAddressPanelConstraints);messagingAddressPanelConstraints.insets = new Insets(0, 0, 0, 6);messagingAddressPanelConstraints.gridx = 1;messagingAddressPanelConstraints.anchor = GridBagConstraints.WEST;messagingAddressJPanel.add(addressPanelToTextField, messagingAddressPanelConstraints);messagingAddressPanelConstraints.insets = new Insets(0, 6, 0, 6);messagingAddressPanelConstraints.gridy = 1;messagingAddressPanelConstraints.gridx = 0;messagingAddressPanelConstraints.anchor = GridBagConstraints.EAST;messagingAddressJPanel.add(addressPanelCcLabel, messagingAddressPanelConstraints);messagingAddressPanelConstraints.insets = new Insets(0, 0, 0, 6);messagingAddressPanelConstraints.gridx = 1;messagingAddressPanelConstraints.anchor = GridBagConstraints.WEST;messagingAddressJPanel.add(addressPanelCcTextField, messagingAddressPanelConstraints);messagingAddressPanelConstraints.insets = new Insets(0, 6, 0, 6);messagingAddressPanelConstraints.gridy = 2;messagingAddressPanelConstraints.gridx = 0;messagingAddressPanelConstraints.anchor = GridBagConstraints.EAST;messagingAddressJPanel.add(addressPanelFromLabel, messagingAddressPanelConstraints);messagingAddressPanelConstraints.insets = new Insets(0, 0, 0, 6);messagingAddressPanelConstraints.gridx = 1;messagingAddressPanelConstraints.anchor = GridBagConstraints.WEST;messagingAddressJPanel.add(addressPanelFromTextField, messagingAddressPanelConstraints);messagingAddressPanelConstraints.insets = new Insets(0, 6, 6, 6);messagingAddressPanelConstraints.gridy = 3;messagingAddressPanelConstraints.gridx = 0;messagingAddressPanelConstraints.anchor = GridBagConstraints.EAST;messagingAddressJPanel.add(addressPanelSubjectLabel, messagingAddressPanelConstraints);messagingAddressPanelConstraints.insets = new Insets(0, 0, 6, 6);messagingAddressPanelConstraints.gridx = 1;messagingAddressPanelConstraints.anchor = GridBagConstraints.WEST;messagingAddressJPanel.add(addressPanelSubjectTextField, messagingAddressPanelConstraints);addressPanelButtonJPanel.setOpaque(false);addressPanelButtonPanelConstraints.weightx = 1;addressPanelButtonPanelConstraints.fill = GridBagConstraints.BOTH;addressPanelButtonPanelConstraints.insets = new Insets(6, 6, 6, 6);addressPanelButtonJPanel.add(addressPanelSentJButton, addressPanelButtonPanelConstraints);addressPanelButtonPanelConstraints.insets = new Insets(6, 0, 6, 6);addressPanelButtonPanelConstraints.gridx = 1;addressPanelButtonJPanel.add(newMessageJButton, addressPanelButtonPanelConstraints);addressPanelButtonPanelConstraints.gridx = 2;addressPanelButtonJPanel.add(addressPanelAttachJButton, addressPanelButtonPanelConstraints);addressPanelButtonPanelConstraints.gridx = 3;addressPanelButtonJPanel.add(addressPanelSendJButton, addressPanelButtonPanelConstraints);messagingAddressPanelConstraints.gridy = 4;messagingAddressPanelConstraints.gridx = 0;messagingAddressPanelConstraints.insets = new Insets(0, 6, 6, 6);messagingAddressPanelConstraints.gridwidth = 2;messagingAddressPanelConstraints.anchor = GridBagConstraints.CENTER;messagingAddressJPanel.add(addressPanelButtonJPanel, messagingAddressPanelConstraints);messagingAddressPanelBasePanelConstraints.insets = new Insets(9, 9, 9, 9);messagingAddressPanelBasePanelConstraints.weighty = 1;messagingAddressPanelBasePanelConstraints.weightx = 1;messagingAddressPanelBasePanelConstraints.fill = GridBagConstraints.BOTH;messagingAddressPanelBaseJPanel.setBackground(SystemWindow.quintessentialThemeColor);messagingAddressPanelBaseJPanel.setBorder(new BevelBorder(BevelBorder.RAISED));messagingAddressPanelBaseJPanel.add(messagingAddressJPanel, messagingAddressPanelBasePanelConstraints);makeAndAddInBoxLabelsToInBoxScrollPanePanel();inBoxJScrollPane.setBorder(new BevelBorder(BevelBorder.LOWERED));inBoxJScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);inBoxJScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);inBoxScrollPaneJPanel.setBackground(Color.WHITE);messagingViewPanel.setBackground(Color.WHITE);messagingViewPanelScrollPane = new JScrollPane(messagingViewPanel);messagingViewPanelScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);messagingViewPanelScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);messagingViewPanelScrollPane.setBorder(new BevelBorder(BevelBorder.LOWERED));outBoxSentMessagesLabelPanel.add(outBoxLabel);outBoxContentPanel.add(outBoxSentMessagesLabelPanel, "outBoxSentMessagesLabelPanel");outBoxContentPanel.add(outBoxTextArea, "outBoxTextArea");outBoxContentPanelCardLayout.show(outBoxContentPanel, "outBoxSentMessagesLabelPanel");outBoxJScrollPane.setBorder(new BevelBorder(BevelBorder.LOWERED));outBoxJScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);outBoxJScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);outBoxTextArea.setEditable(true);leftBaseJPanel.setOpaque(false);centerJPanel.setOpaque(false);rightBaseJPanel.setOpaque(false);messagingCommandJPanel.setOpaque(false);messagingCommandJPanel.setBorder(new LineBorder(new Color(100, 100, 100), 2));messagingCommandPanelBasePanelConstraints.insets = new Insets(9, 9, 9, 9);messagingCommandPanelBasePanelConstraints.weighty = 1;messagingCommandPanelBasePanelConstraints.weightx = 1;messagingCommandPanelBasePanelConstraints.fill = GridBagConstraints.BOTH;messagingCommandsPanelBaseJPanel.setBackground(SystemWindow.quintessentialThemeColor);messagingCommandsPanelBaseJPanel.setBorder(new BevelBorder(BevelBorder.RAISED));messagingCommandsPanelBaseJPanel.add(messagingCommandJPanel, messagingCommandPanelBasePanelConstraints);messagingCommandPanelConstraints.insets = new Insets(6, 6, 6, 6);messagingCommandPanelConstraints.fill = GridBagConstraints.BOTH;messagingCommandJPanel.add(commandPanelButtonsPanelHeaderJLabel, messagingCommandPanelConstraints);messagingCommandPanelConstraints.gridy = 1;messagingCommandPanelConstraints.insets = new Insets(0, 6, 6, 6);messagingCommandJPanel.add(commandPanelCardedJPanel, messagingCommandPanelConstraints);messagingCommandPanelConstraints.gridy = 2;messagingCommandJPanel.add(commandPanelButtonsJPanel, messagingCommandPanelConstraints);leftBaseJPanel.add(messagingCommandsPanelBaseJPanel, leftBasePanelConstraints);leftBasePanelConstraints.gridy = 1;leftBasePanelConstraints.weighty = 1;leftBasePanelConstraints.fill = GridBagConstraints.BOTH;leftBaseJPanel.add(inBoxJScrollPane, leftBasePanelConstraints);rightBaseJPanel.add(messagingAddressPanelBaseJPanel, rightPanelConstraints);rightPanelConstraints.gridy = 1;rightPanelConstraints.weighty = 1;rightPanelConstraints.fill = GridBagConstraints.BOTH;rightBaseJPanel.add(outBoxJScrollPane, rightPanelConstraints);centerPanelConstraints.insets = new Insets(0, 0, 2, 0);centerPanelConstraints.weightx = 1;centerPanelConstraints.fill = GridBagConstraints.HORIZONTAL;centerJPanel.add(messagingContactsJPanel, centerPanelConstraints);centerPanelConstraints.gridy = 1;centerPanelConstraints.insets = new Insets(2, 0, 0, 0);centerPanelConstraints.weighty = 1;centerPanelConstraints.fill = GridBagConstraints.BOTH;centerJPanel.add(messagingViewPanelScrollPane, centerPanelConstraints);contentPanelConstraints.insets = new Insets(0, 0, 0, 2);contentPanelConstraints.fill = GridBagConstraints.VERTICAL;contentJPanel.add(leftBaseJPanel, contentPanelConstraints);contentPanelConstraints.gridx = 1;contentPanelConstraints.weighty = 1;contentPanelConstraints.weightx = 1;contentPanelConstraints.fill = GridBagConstraints.BOTH;contentPanelConstraints.insets = new Insets(0, 2, 0, 2);contentJPanel.add(centerJPanel, contentPanelConstraints);contentPanelConstraints.gridx = 2;contentPanelConstraints.weighty = 0;contentPanelConstraints.weightx = 0;contentPanelConstraints.fill = GridBagConstraints.VERTICAL;contentPanelConstraints.insets = new Insets(0, 2, 0, 0);contentJPanel.add(rightBaseJPanel, contentPanelConstraints);contentJPanel.setOpaque(false);messagingCommandsPanelBaseJPanel.setSize(messagingCommandsPanelDimension);messagingCommandsPanelBaseJPanel.setPreferredSize(messagingCommandsPanelDimension);messagingAddressPanelBaseJPanel.setSize(messagingAddressPanelDimension);messagingAddressPanelBaseJPanel.setPreferredSize(messagingAddressPanelDimension);inBoxJScrollPane.setMinimumSize(new Dimension(400, 1));outBoxJScrollPane.setMinimumSize(new Dimension(400, 1));leftBaseJPanel.setMaximumSize(new Dimension(400, 2160));rightBaseJPanel.setMaximumSize(new Dimension(400, 2160));messagingContactsJPanel.setMinimumSize(messagingContactsPanelDimension);}public void fillMemosJPanel() {JPanel receivedMemosJPanel = new JPanel(new GridBagLayout());JPanel sentMemosJPanel = new JPanel(new GridBagLayout());JLabel memoReceivedJLabel1;JLabel memoReceivedJLabel2;JLabel memoReceivedJLabel3;JLabel memoSentJLabel1;JLabel memoSentJLabel2;JLabel memoSentJLabel3;GridBagConstraints receivedMemosPanelConstraints = new GridBagConstraints();GridBagConstraints sentMemosPanelConstraints = new GridBagConstraints();receivedMemosPanelConstraints.gridx = 0;receivedMemosPanelConstraints.gridy = 0;sentMemosPanelConstraints.gridx = 0;sentMemosPanelConstraints.gridy = 0;sentMemosJPanel.setOpaque(false);receivedMemosJPanel.setOpaque(false);int ind = 0;while (ind < memosReceived.size()) {memoReceivedJLabel1 = new JLabel(memosReceived.elementAt(ind)[1]);memoReceivedJLabel2 = new JLabel(memosReceived.elementAt(ind)[2]);memoReceivedJLabel3 = new JLabel(memosReceived.elementAt(ind)[3]);memoReceivedJLabel1.setFont(new Font("Arial", Font.BOLD, 18));memoReceivedJLabel2.setFont(new Font("Arial", Font.BOLD, 18));memoReceivedJLabel3.setFont(new Font("Arial", Font.BOLD, 18));receivedMemosJPanel.add(memoReceivedJLabel1);receivedMemosPanelConstraints.gridx = receivedMemosPanelConstraints.gridx + 1;receivedMemosJPanel.add(memoReceivedJLabel2);receivedMemosPanelConstraints.gridx = receivedMemosPanelConstraints.gridx + 1;receivedMemosJPanel.add(memoReceivedJLabel3);receivedMemosPanelConstraints.gridx = receivedMemosPanelConstraints.gridx + 1;receivedMemosPanelConstraints.gridy = receivedMemosPanelConstraints.gridy + 1;ind++;}if (memosReceived.size() == 0) {memoReceivedJLabel1 = new JLabel("No new alerts or notes received.");memoReceivedJLabel1.setFont(new Font("Arial", Font.BOLD, 18));receivedMemosJPanel.add(memoReceivedJLabel1);}ind = 0;while (ind < memosSent.size()) {memoSentJLabel1 = new JLabel(memosSent.elementAt(ind)[1]);memoSentJLabel2 = new JLabel(memosSent.elementAt(ind)[2]);memoSentJLabel3 = new JLabel(memosSent.elementAt(ind)[3]);memoSentJLabel1.setFont(new Font("Arial", Font.BOLD, 18));memoSentJLabel2.setFont(new Font("Arial", Font.BOLD, 18));memoSentJLabel3.setFont(new Font("Arial", Font.BOLD, 18));receivedMemosJPanel.add(memoSentJLabel1);receivedMemosPanelConstraints.gridx = receivedMemosPanelConstraints.gridx + 1;receivedMemosJPanel.add(memoSentJLabel2);receivedMemosPanelConstraints.gridx = receivedMemosPanelConstraints.gridx + 1;receivedMemosJPanel.add(memoSentJLabel3);receivedMemosPanelConstraints.gridx = receivedMemosPanelConstraints.gridx + 1;receivedMemosPanelConstraints.gridy = receivedMemosPanelConstraints.gridy + 1;ind++;}if (memosSent.size() == 0) {memoSentJLabel1 = new JLabel("No new alerts or notes sent.");memoSentJLabel1.setFont(new Font("Arial", Font.BOLD, 18));sentMemosJPanel.add(memoSentJLabel1);}memosCardedJPanel.removeAll();memosCardedJPanel.add(sentMemosJPanel, "sentMemosJPanel");memosCardedJPanel.add(receivedMemosJPanel, "receivedMemosJPanel");}private void getMessages() {SystemWindow.println("getMessages() was clicked.");Vector<String[]> gmailMessages = new Vector<String[]>();}private String getSMTP() {return "smtp.comcast.net";}private String getToFieldText() {String toString = addressPanelToTextField.getText().trim();return toString;}public void actionPerformed(ActionEvent e) {if (e.getActionCommand().equals("newAccountOkJButton")) {String personNameTitle = messagingEditContactsField1Title.getText();String personNameLastName = messagingEditContactsField2LastName.getText();String personNameFirstName = messagingEditContactsField3FirstName.getText();String personNameMiddleInitialOrName = messagingEditContactsField4MiddleName.getText();String personNameSuffix = messagingEditContactsField5Suffix.getText();String personNameEmail = messagingEditContactsField6EmailA.getText();String personNameWorkPhone = messagingEditContactsField7WorkPhoneA.getText();String personNameDegree = messagingEditContactsFieldPersonNameDegreeHL7Element00801.getText();String personName = messagingEditContactsField9PersonalPhone.getText();} else if (e.getActionCommand().equals("memosReceivedJButton")) {fillMemosJPanel();memosCardedPanelCardLayout.show(memosCardedJPanel, "receivedMemosJPanel");} else if (e.getActionCommand().equals("memosSentJButton")) {fillMemosJPanel();memosCardedPanelCardLayout.show(memosCardedJPanel, "sentMemosJPanel");} else if (e.getActionCommand().equals("editAccountsJButton")) {commandPanelCardLayout.show(commandPanelCardedJPanel, "commandJPanel");} else if (e.getActionCommand().equals("messagingAccountsJButton")) {commandPanelCardLayout.show(commandPanelCardedJPanel, "messagingAccountsJPanel");} else if (e.getActionCommand().equals("checkAccountsJButton")) {addTalkbackText("Checking email inbox...", null, true);getMessages();messagingViewPanel.validate();validate();repaint();} else if (e.getActionCommand().equals("editOkJButton")) {contactsAndMemosJPanel.remove(editContactsJPanel);validate();repaint();} else if (e.getActionCommand().equals("newContactJButton")) {contactsAndMemosJPanel.add(editContactsJPanel, contactsAndMemosPanelConstraints);validate();repaint();} else if (e.getActionCommand().equals("addressPanelSentJButton")) {outBoxContentPanelCardLayout.show(outBoxContentPanel, "outBoxSentMessagesLabelPanel");} else if (e.getActionCommand().equals("Send")) {outBoxContentPanelCardLayout.show(outBoxContentPanel, "messagingOutBoxControlPanelTextAreaField1");sendEmail();} else if (e.getActionCommand().equals("newMessageJButton")) {outBoxTextArea.removeAll();outBoxTextArea.setText("");outBoxContentPanelCardLayout.show(outBoxContentPanel, "outBoxTextArea");}}public void sendEmail() {}private void makeAndAddInBoxLabelsToInBoxScrollPanePanel() {String date;JLabel pInBoxMessagesLabel = new JLabel();int ind = 0;String today = new Date().toString();if (Access.isUserLoggedIn) {do {if (((String[]) ((Vector) ((Vector) ((Vector) (Access.user.elementAt(4))).elementAt(1)).elementAt(ind)).elementAt(1))[0].equals("SENT")) {String pTimestamp = ((Date) ((Vector) ((Vector) ((Vector) (Access.user.elementAt(4))).elementAt(1)).elementAt(ind)).elementAt(0)).toString();String formattedTimestamp = pTimestamp.substring((pTimestamp.length() - 17), (pTimestamp.length() - 15));String hours = pTimestamp.substring((pTimestamp.length() - 17), (pTimestamp.length() - 15));String aMPM = "AM";if (hours.equals("00")) {hours = "12";aMPM = "PM";}if (hours.equals("13")) {hours = "01";aMPM = "PM";}if (hours.equals("14")) {hours = "02";aMPM = "PM";}if (hours.equals("15")) {hours = "03";aMPM = "PM";}if (hours.equals("16")) {hours = "04";aMPM = "PM";}if (hours.equals("17")) {hours = "05";aMPM = "PM";}if (hours.equals("18")) {hours = "06";aMPM = "PM";}if (hours.equals("19")) {hours = "07";aMPM = "PM";}if (hours.equals("20")) {hours = "08";aMPM = "PM";}if (hours.equals("21")) {hours = "09";aMPM = "PM";}if (hours.equals("22")) {hours = "10";aMPM = "PM";}if (hours.equals("23")) {hours = "11";aMPM = "PM";}if (hours.equals("24")) {hours = "11";aMPM = "PM";}if (today.substring(0, 10).equals(pTimestamp.substring(0, 10)) & today.substring((today.length() - 4), today.length()).equals(pTimestamp.substring((pTimestamp.length() - 4), pTimestamp.length()))) {date = "Today, " + hours + pTimestamp.substring((pTimestamp.length() - 15), (pTimestamp.length() - 12)) + aMPM;} else {date = pTimestamp.substring(0, 10) + ", " + pTimestamp.substring((pTimestamp.length() - 4), pTimestamp.length());}inBoxHTML = "<html>" + title2 + " " + lastName + ", " + firstName + " " + middleName + "<align=\"RIGHT\">" + date + "<br></html>";pInBoxMessagesLabel.setText(inBoxHTML);}} while (ind < countReceivedMessages());} else {pInBoxMessagesLabel.setText("<html>Dr. Feelgood, Pills J; " + today);}inBoxScrollPaneJPanel.add(pInBoxMessagesLabel);}private int countReceivedMessages() {int count = 0;int ind = 0;do {if (((String[]) ((Vector) ((Vector) ((Vector) (Access.user.elementAt(4))).elementAt(1)).elementAt(ind)).elementAt(1))[0].equals("Received")) {count++;}ind++;} while (ind < ((Vector) ((Vector<Vector>) Access.user.elementAt(4)).elementAt(1)).size());return count;}public void reSize() {setPreferredSize(messagingSizeDimension);setMinimumSize(new Dimension(80, 320));setSize(messagingSizeDimension);}public String[] isFieldDatatypeCorrect(String datatype, String field) {String[] answer = new String[8];if (datatype.equals("ST")) {} else if (datatype.equals("SI")) {} else if (datatype.equals("HD")) {} else if (datatype.equals("ID")) {} else if (datatype.equals("IS")) {} else if (datatype.equals("EI")) {} else if (datatype.equals("PT")) {} else if (datatype.equals("TS")) {} else if (datatype.equals("CE")) {} else if (datatype.equals("CX")) {} else if (datatype.equals("XCN")) {} else if (datatype.equals("XPN")) {}return answer;}public void HL7Messenger(String dataType, String recipient, Vector<String> messageFieldValues) {String message = "";int messageFieldValuesInd;Vector<String> dataFields = new Vector<String>();Vector<Vector<String>> segment;Vector<String> requiredSegments = new Vector<String>();int maximumFieldLength;String fieldEncodingRule;String segmentIDCodeString;int segmentIDCodeInd;String segmentTerminator = "<cr>";String aSCIICarriageReturn;String fieldSeparator = "|";String repetitionSeparator = "~";String escapeCharacter = "\\";String messageHeaderSegment = "MSH";String patientIdentificationSegment = "PID";String financialTransactionSegment = "FT1";String observationReportingSegment = "OBR";String observationResultsSegment = "OBX";if (dataType.equals("blah") || dataType.equals("blah")) {} else if (dataType.equals("blah") || dataType.equals("blah")) {}if (recipient.equals("blah")) {}boolean continueMessage = true;segmentIDCodeInd = 0;while (continueMessage) {segmentIDCodeString = String.valueOf(segmentIDCodeInd);if (segmentIDCodeString.length() == 1) {segmentIDCodeString = "00" + segmentIDCodeString;} else if (segmentIDCodeString.length() == 2) {segmentIDCodeString = "0" + segmentIDCodeString;} else if (segmentIDCodeString.length() > 3) {message = "too many strings";}message = message + segmentIDCodeString;messageFieldValuesInd = 0;while (messageFieldValuesInd < messageFieldValues.size()) {message = message + fieldSeparator;if (messageFieldValues.elementAt(messageFieldValuesInd) != null) {message = message + messageFieldValues.elementAt(messageFieldValuesInd);} else {message = message + "\"\"";}}segmentIDCodeInd++;}}public static File sendAsAttachmentToEmail(Vector<Vector> v, String recipientURL) {File file = new File("");return file;}}// EOF