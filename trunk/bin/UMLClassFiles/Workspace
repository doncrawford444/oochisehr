Workspace_________systemFrameSizeDimension : Dimension = new Dimension(600, 725)practiceAssistantColor : Color = new Color(180, 175, 207)decisionSupportColor : Color = Color.LIGHT_GRAYwindowFrameButtonFont : Font = new Font("Electron", Font.BOLD, 14)loginColor : Color = new Color(180, 207, 177)systemFrameColor : Color = new Color(193, 211, 222)systemFrameYShear : double = -0.18chartsFrameYShear : double = -0.04messagingFrameYShear : double = 0.0decisionSupportFrameYShear : double = 0.04practiceAssistantFrameYShear : double = 0.18notePadYShear : double = 0.0iconImageWidth : int = ((2 * Device.halfScreenWidth / 5) - 4)systemWindowIconHomePosition : Point = new Point(10, Device.device.halfScreenHeight - iconImageWidth / 2)chartingWindowIconHomePosition : Point = new Point(20 + iconImageWidth, (int) (Device.device.halfScreenHeight - iconImageWidth / 2 - Math.abs(chartsFrameYShear) * iconImageWidth))messagingWindowIconHomePosition : Point = new Point(30 + 2 * iconImageWidth, (int) (Device.device.halfScreenHeight - iconImageWidth / 2 - Math.abs(chartsFrameYShear) * iconImageWidth))decisionSupportWindowIconHomePosition : Point = new Point(40 + 3 * iconImageWidth, (int) (Device.device.halfScreenHeight - iconImageWidth / 2 - Math.abs(chartsFrameYShear) * iconImageWidth))practiceWindowIconHomePosition : Point = new Point(50 + 4 * iconImageWidth, Device.device.halfScreenHeight - iconImageWidth / 2)notePadWindowIconHomePosition : Point = new Point(50 + 4 * iconImageWidth, Device.device.halfScreenHeight - iconImageWidth / 2)initialPanelX : intinitialPanelY : intinitialMouseX : intinitialMouseY : intinitiateMouseEvent : boolean = trueprinterOriginalX : int = 0printerOriginalY : int = 0printerOriginalMouseX : int = 0printerOriginalMouseY : int = 0originalX : int = 0originalY : int = 0originalMouseX : int = 0originalMouseY : int = 0raw : byte[] = { 0x01, 0x00, 0x05, 0x06, 0x04, 0x05, 0x03, 0x0b, 0x08, 0x09, 0x0a, 0x07, 0x0c, 0x0f, 0x0e, 0x0d }desktopBarBasePanelPusherJLabel : JLabel = new JLabel(" ")vitalityIconJLabel : JLabel = new JLabel("  Oochis EHR  ")taskBarColor : Color = new Color(135, 155, 155)menuBarDisabledColor : ColorclockDate : Date = new DateclockJLabel : JLabel = new JLabel("  " + clockDate.toString() + "  ")clockTimer : TimerchartingWindow : ChartingWindow = new ChartingWindowdecisionSupportWindow : DecisionSupportWindow = new DecisionSupportWindowmessagingWindow : MessagingWindow = new MessagingWindowpracticeAssistantWindow : PracticeWindow = new PracticeWindowsystemWindow : SystemWindow = new SystemWindownotePad : NotePad = new NotePadmonthName : String[] = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }dayName : String[] = { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }amPm : String[] = { "AM", "PM" }calendar : CalendarcalendarSecond : StringcalendarMinute : StringcalendarHour : StringloginJButton : JButton = new JButton("   Log in   ")chartingJButton : JButton = new JButton("   Charts   ")decisionSupportJButton : JButton = new JButton("   Decision Support   ")systemJButton : JButton = new JButton("   System   ")messagingJButton : JButton = new JButton("   Messaging   ")practiceAssistantJButton : JButton = new JButton("   Practice Assistant   ")toPrinterJButton : JButton = new JButton(" To printer ")desktopBarBaseJPanel : JPanel = new JPanel(gb)taskBarJPanel : JPanel = new JPanel(gb)desktopBarDividerJLabel : JLabel = new JLabel(" ||| ")_______________________________________________________________________________________________________________________________________________________________________________________________actionPerformed(evt : ActionEvent) : vsetSubsystemFramesAndIconButtons() : vswitchActiveWindowTo(activeWindow : Window) : vactionPerformed(e : ActionEvent) : vcombineCharArraysAndReturnPasswordBytes(pvitalityPassword : char[], selectedNewUserPasswordChars : char[]) : byte[]makeRawFromPassword(pSelectedNewUserPassword : char[]) : byte[]switchToLoginScreen() : vresetWorkspace() : vclearAllTextObjects(container : Container) : vdeselectAllButtons(container : Container) : vmouseDragged(m : MouseEvent) : vmouseMoved(m : MouseEvent) : vmouseClicked(m : MouseEvent) : vmouseEntered(m : MouseEvent) : vmouseExited(m : MouseEvent) : vmousePressed(m : MouseEvent) : vmouseReleased(m : MouseEvent) : v// EOF